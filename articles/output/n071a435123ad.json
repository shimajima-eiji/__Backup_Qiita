{
  "title": "#GAS #スクレイピング を便利にする「cheeriogs」を使ってスプレッドシートに登録する",
  "link": "https://note.com/nomuragoro/n/n071a435123ad",
  "pub_date": "Thu, 13 Aug 2020 01:20:49 +0900",
  "creator": "中 翔（のむらごろう）| IT教育の効果的な受講方法の案内人",
  "guid": "n071a435123ad",
  "description": null,
  "post_id": 47,
  "content": "<p name=\"ZGwEE\">JQueryを使っていると、スクレイピングでcheerioにはすごくお世話になりますが、GASでも使えるとは思わなかったです。</p><p name=\"5361ab09-7500-445e-b982-ea89e7e10d0a\"><a href=\"https://github.com/tani/cheeriogs\">https://github.com/tani/cheeriogs</a></p><p name=\"Ycfi9\">スクリプトIDは</p><blockquote name=\"zxKx6\">1ReeQ6WO8kKNxoaA_O0XEQ589cIrRvEBA9qcWpNqdOP17i47u6N9M5Xh0</blockquote><p name=\"e8qj0\">なので、これを使っていきましょう。</p><h2 name=\"tt0UP\"># 実践</h2><p name=\"xVqIe\">ソースコードで語ります。</p><h2 name=\"ASO7o\">## Before</h2><pre name=\"x8l3t\"><code>var yearsname2ad = {\n \"元年\": 2019,\n};\nconst URL = PropertiesService.getScriptProperties().getProperties().url;\n\nfunction __scraping ()\n{\n var html = UrlFetchApp.fetch( URL ).getContentText( 'UTF-8' ).replace( /\\r?\\n/g, \"\" ).replace( /[０-９]/g, function ( word )\n {\n   return String.fromCharCode( word.charCodeAt( 0 ) - 0xFEE0 )\n } );\n var start = \"&lt;tbody&gt;\";\n var end = \"&lt;/tbody&gt;\";\n return __cut( html, start, end );\n}\n\nvar __match = {\n tr: /\\&lt;tr \\w(.*?)\\&lt;\\/tr\\&gt;/g,\n td: /\\&lt;td \\w(.*?)\\&lt;\\/td\\&gt;/g,\n year: /[\\d元](.*)年/g,\n month: /年\\d(.*)月/g,\n day: /月\\d(.*)日/g,\n run: function ( str, pattern ) { return str.match( __match[ pattern ] ) },\n}\nfunction __cut ( str, sep )\n{\n return str.substring( str.indexOf( sep ) + sep.length, str.length );\n}\nfunction __rsubstring ( str, sep )\n{\n return str.substring( 0, str.indexOf( sep ) );\n}\n\nfunction __getYMD ( str, pattern )\n{\n var tmp = __match.run( str, pattern )[ 0 ]\n\n switch ( pattern )\n {\n   case \"year\":\n     tmp = yearsname2ad[ tmp ];\n     break;\n\n   case \"month\":\n   case \"day\":\n     tmp = tmp.substring( 1, tmp.length - 1 );\n     if ( tmp.length == 1 ) tmp = \"0\" + tmp;\n     break;\n }\n return tmp;\n}\nfunction __getDate ( str )\n{\n var year = __getYMD( str, \"year\" );\n var month = __getYMD( str, \"month\" );\n var day = __getYMD( str, \"day\" );\n return year + \"-\" + month + \"-\" + day;\n}\n\nvar table = __scraping()\nvar tr_items = __match.run( table, \"tr\" );\nvar td_items = tr_items.map( function ( tr )\n{\n var tds = __match.run( tr, \"td\" );\n return tds.map( function ( td )\n {\n   var clean_td = __rsubstring( __cut( td, \"&gt;\" ), \"&lt;\" )\n     .trim()\n     .replace( / /g, \"\" )\n     .replace( /　/g, \"\" )\n     .replace( /\\(/g, \"\" )\n     .replace( /\\)/g, \"\" )\n     ;\n   if ( clean_td.indexOf( \"年\" ) &gt; -1 ) clean_td = __getDate( clean_td );\n   return clean_td;\n } );\n} );\ntd_items.shift();</code></pre><h2 name=\"M8OE0\">## After</h2><pre name=\"E9ch1\"><code>const years = [\n {\n   name: \"令和\",\n   start: 2019,\n },\n];\n\nfunction replaces ( str )\n{\n return getDate( str ).trim()\n   .replace( / /g, \"\" )\n   .replace( /　/g, \"\" )\n   .replace( /\\)/g, \"\" )\n   .replace( /\\(/g, \"\" )\n   .replace( /[０-９]/g, function ( word )\n   {\n     return String.fromCharCode( word.charCodeAt( 0 ) - 0xFEE0 )\n   } );\n}\nfunction getDate ( str )\n{\n if ( str.indexOf( \"年\" ) == -1 ) return str;\n\n var ad = -1;  // 元年分を減らしておくため-1\n years.forEach( function ( year )\n {\n   if ( str.indexOf( year.name ) &gt; -1 )\n   {\n     ad += year.start;\n     str = str.replace( year.name, \"\" );\n   }\n } );\n\n str = str.replace( \"元\", 1 )\n\n var split = str.split( \"年\" );  // 2桁以上の検出に対応\n return ( Number( split[ 0 ] ) + ad )\n   + \"-\"\n   + split[ 1 ].replace( \"月\", \"-\" ).replace( \"日\", \"\" );\n}\n\nconst URL = PropertiesService.getScriptProperties().getProperties().url;\nconst content = UrlFetchApp.fetch( URL ).getContentText();\nconst $ = Cheerio.load( content );\n\nvar result = [];\nvar pointer = -1;\nconst EXCLUDE_COLUMN = 3; // 最初の行だけおかしなものがあるので除外\nconst COLUMNS = 4;\n$( \"td\" ).each( function ( i, td )\n{\n if ( i &lt; EXCLUDE_COLUMN ) return;\n if ( i % COLUMNS == EXCLUDE_COLUMN )\n {\n   result.push( [] );\n   pointer++;\n }\n result[ pointer ].push( replaces( $( td ).text() ) );\n} );</code></pre><p name=\"PG3VC\">行数はそんなに変わっていないのに、メンテナンス性が明らかに違いますね。<br>パターンマッチングを辞めたのは非常に大きいです。</p><p name=\"A30La\">※getDateとgetYMDは似たような事をやってるので統合しました。</p><h2 name=\"6eifa\"># ヨタ話</h2><p name=\"02d86862-6b1c-49ad-9fff-5a57bd1b45ea\"><a href=\"https://su-kun1899.hatenablog.com/entry/2020/06/17/230000\">https://su-kun1899.hatenablog.com/entry/2020/06/17/230000</a></p><p name=\"0XY82\">Momentjsの出どころは私も気になっていました。<br>見た感じだとここが一番まともっぽい話をしていたのと、ソースが見れたので本スクリプトでも採用しています。</p><h2 name=\"od01q\"># 戻る</h2><p name=\"8d7eb7ab-61d0-4ab0-ac04-eaa75af072fb\"><a href=\"https://note.com/nomuragoro/n/neff623b63145\">https://note.com/nomuragoro/n/neff623b63145</a></p><p name=\"Y4HrZ\"><br></p>",
  "post_date": "2020-08-13 01:20:49",
  "status": "publish",
  "source": "xml"
}