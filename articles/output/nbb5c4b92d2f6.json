{
  "title": "GASでAPIを作る時にハマるポイントまとめ",
  "link": "https://note.com/nomuragoro/n/nbb5c4b92d2f6",
  "pub_date": "Wed, 12 Aug 2020 20:16:14 +0900",
  "creator": "中 翔（のむらごろう）| IT教育の効果的な受講方法の案内人",
  "guid": "nbb5c4b92d2f6",
  "description": null,
  "post_id": 44,
  "content": "<p name=\"Q3eL1\">この記事の読者は、</p><p name=\"1df5d228-68ff-4750-9a6f-3f83889b9715\"><a href=\"https://www.bugbugnow.net/2019/06/gasweb.html\">https://www.bugbugnow.net/2019/06/gasweb.html</a></p><p name=\"6A4fv\">を読んでもよく分からなかった方向けです。<br>ここに書かれている事はGASの仕様の話なのですが、単純にGASでAPIを作りたいだけの人にとっては、この内容でも難しいと思います。</p><p name=\"zPZm5\">そこで、ソースコードと設定について切り分けて解説していきます。</p><h2 name=\"KfaEX\"># 対象の読者</h2><p name=\"6JccF\">- 参考にしたサイトの情報通りにやったのに出来ない！<br>- CORS？認証？なんぞそれ<br>- GASのスクリプトが悪いの？設定が間違ってる？クライアントの問題？</p><p name=\"9euvT\">ソースコードの解説は多いのに、なぜか救われない・言及されない悲鳴たちを救済するための記事です。<br>つまり、私向けです。<br>こんな事のために一週間ハマったので、もう二度とハマらないための備忘録です。</p><h2 name=\"20jua\"># トラブルシューティング</h2><p name=\"0ZcO5\">ハマる順番に書いてます。上から順番に見ていくと案外簡単にできます。</p><h2 name=\"pOzPT\">## コードは間違ってないが設定が分からない</h2><p name=\"wH90r\">&nbsp; - Webアプリケーションとして公開<br>&nbsp; -&nbsp;Project version: 「New」（何も更新していない場合でもNew）<br>&nbsp; -&nbsp;Execute the app as: 「Me」<br>&nbsp; -&nbsp;Who has access to the app: 「Anyone, even anonymous」</p><h2 name=\"03FKX\">## ソースコード</h2><h2 name=\"IB84h\">### ブラウザ</h2><pre name=\"2JIQx\"><code>&lt;script&gt;\nvar url = \"\";</code><code>fetch( url ).then( function ( response )\n{\n  return response.text();\n} ).then( function ( text )\n{\n  console.log( text );\n} );\n&lt;/script&gt;</code></pre><h2 name=\"it8fK\">### GAS</h2><pre name=\"A1vGz\"><code>var json = {test: \"hoge\"};\nvar result = JSON.stringify(json);\nreturn ContentService.createTextOutput();</code></pre><h2 name=\"5Skl4\"># 解説：間違いに気づくまで</h2><p name=\"dYBLk\">まず、上記のように設定が適切であれば値を受け取れます。<br>後はWebアプリケーションとして公開すれば、接続先の情報が分かります。<br>ここにアクセスすれば先程作成したjsonが表示されます。</p><p name=\"2xtnR\">が、間違った設定でブラウザでアクセスすると認証情報をパスできるので見た目には問題なさそうに見えてしまいます。<br>というのも、この接続先にcurlコマンドで結果を受け取ろうとするとCORS問題に直面します。</p><pre name=\"Aw9wX\"><code>curl -L (接続先)</code></pre><p name=\"zDsTV\">これだけでは認証情報が足りないのです。<br>そこで、認証情報を取得します。</p><pre name=\"50mn7\"><code>function myFunction() {\n  Logger.log(DriveApp.getRootFolder().getName());\n  Logger.log(ScriptApp.getOAuthToken());\n}</code></pre><p name=\"CqrlY\">​ここで得た認証情報をcurlにくっつけて実行します。</p><pre name=\"KoG1y\"><code>curl -L&nbsp;(接続先) -H \"Authorization: Bearer (ここに結果) </code></pre><p name=\"JmgtZ\">これで取得できます。</p><p name=\"2JLn6\">が、認証情報を使ったら一般公開は出来ませんので、開発用途に留めましょう。</p><h2 name=\"vbLr2\">### 参考：curlコマンドをスクリプトに置き換えたい</h2><p name=\"VcQNf\">curlは書けても他言語やスクリプトでオプションをどうやって設定するのかがピンと来ない時に、こういうサービスを使うと簡単に解決できたりします。</p><h2 name=\"xwWGx\">## どうしてもうまく行かない場合はJSONPを使う</h2><p name=\"GhSIk\">ありきたりですが、よくわからなくなったらJSONPで書き換える手もあります。<br>警告が煩わしいですが、やりたいことはできます。</p><h2 name=\"mssV0\">### ソースコード：GAS.gs</h2><pre name=\"ImvE0\"><code>var callback = e.parameter.callback;\n​\nvar res = ContentService.createTextOutput(callback + '(' + JSON.stringify(result) + ')');\nres = res.setMimeType(ContentService.MimeType.JAVASCRIPT);\n​\nreturn res</code></pre><h2 name=\"mNqmD\">### ソースコード：クライアント.html</h2><pre name=\"oGZ8b\"><code>&lt;script&gt;\nfunction getWage(json)\n{\n  console.log(json);\n}\n&lt;/script&gt;\n&lt;script src=\"(URL)/exec?callback=getWage\"&gt;&lt;/script&gt;</code></pre><p name=\"HlHNO\">取得したアドレスにcallbackをGETパラメータとして渡します。<br>値は、callbackを受ける関数名（ここではfunction getWage）です。</p><p name=\"CVMOt\">最低賃金APIの場合、</p><pre name=\"0N74l\"><code>https://script.google.com/macros/s/AKfycbzRF1iLpeQ6McV3d6Z540yBqovDsErS_OgEeuX3EBFnZQpE_ds/exec?callback=getWage</code></pre><p name=\"Tsur7\">となります。</p><h2 name=\"YqHMc\">## 参考</h2><p name=\"lGjwt\">GASでブラウザの挙動をテストすることができます。</p><pre name=\"RPYFz\"><code>function doTest() {\n var out = doGet();\n Logger.log('MimeType: '+out.getMimeType());\n Logger.log('Content: \\n'+out.getContent());\n}</code></pre><p name=\"k5OYR\">ただし、認証情報などは考慮されないため、ここでうまくいってもブラウザなどでアクセスすると失敗する事があります。<br>その場合、ソースコードに問題がないことが分かります。</p><h2 name=\"apLsG\"># 元の記事に戻る</h2><p name=\"4972ebe0-36e3-4375-82a4-db5d8f4ffa4a\"><a href=\"https://note.com/nomuragoro/n/neff623b63145\">https://note.com/nomuragoro/n/neff623b63145</a></p><p name=\"G2pnf\"><br></p>",
  "post_date": "2020-08-12 20:16:14",
  "status": "publish"
}